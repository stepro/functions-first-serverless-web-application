#!/bin/bash
set -e

ME=$(which "$0")
ME=$(basename "$ME")
MD=$(cd $(dirname "$0") && pwd -P)
az=$(which az 2>/dev/null || echo az.cmd)

fatal() {
  echo >&2 $ME: "$@"
  exit 1
}

ARGS=$(getopt g:l: "$@") || exit 1
eval set -- "$ARGS"
while true; do
  case "$1" in
    -g) RESOURCE_GROUP=$2; shift;;
    -l) LOCATION=$2; shift;;
    --) break;;
  esac
  shift
done

if [ -z "$RESOURCE_GROUP" ]; then
  fatal required option: g
fi
if [ -z "$LOCATION" ]; then
  LOCATION=$($az group show -n "$RESOURCE_GROUP" --query location -o tsv 2>/dev/null || echo -n)
  if [ -z "$LOCATION" ]; then
    fatal required option: l
  fi
fi

build0() {
  cd "$MD/www"
  npm install
  npm run generate
}
build0 &
wait

apply() {
  cd "$MD/deployment"
  terraform init
  terraform apply \
    -var resource_group=$RESOURCE_GROUP \
    -var default_location=$LOCATION \
    -auto-approve
}
apply &
wait

valueof() {
  ADDRESS=$1
  PROPERTY=$2
  pushd "$MD/deployment" > /dev/null
  terraform state show $ADDRESS \
    | grep ^$PROPERTY\  \
    | sed 's/^'$PROPERTY'[^=]*= //'
  popd > /dev/null
}

output() {
  PROPERTY=$1
  pushd "$MD/deployment" > /dev/null
  terraform output \
    | grep ^$PROPERTY\  \
    | sed 's/^'$PROPERTY'[^=]*= //'
  popd > /dev/null
}

push0() {
  cd "$MD/${LANGUAGE:-csharp}"
  ZIP_FILE=$(mktemp -u).zip
  trap 'rm -f $ZIP_FILE' exit
  zip -r $ZIP_FILE . > /dev/null
  $az functionapp deployment source config-zip \
    -n $(valueof azurerm_function_app.image_api name) \
    -g $(valueof azurerm_function_app.image_api resource_group_name) \
    --src $ZIP_FILE \
    --query message \
    -o tsv
  rm -f $ZIP_FILE
}
push0 &
wait

push1() {
  cd "$MD/www/dist"
  image_api=$(output image_api)
  image_storage=$(output image_storage | sed 's/\/$//')
  sed \
    -e s/'$image_api'/${image_api//\//\\\/}/g \
    -e s/'$image_storage'/${image_storage//\//\\\/}/g \
    settings.template.js > settings.js
  $az storage blob upload-batch \
    --account-name $(valueof azurerm_storage_account.default name) \
    --source . \
    --destination \$web \
    --query [].blob \
    -o tsv
}
push1 &
wait

end() {
  echo
  echo Outputs:
  echo
  cd "$MD/deployment"
  terraform output
}
end &
wait
