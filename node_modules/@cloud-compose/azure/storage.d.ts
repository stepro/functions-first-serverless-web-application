import * as azure from "./azure";
import * as sdk from "azure-storage";

export enum AccountKind {
    storageV1 = "StorageV1",
    storageV2 = "StorageV2",
    blobStorage = "BlobStorage"
}

export enum Performance {
    standard = "Standard",
    premium = "Premium"
}

export enum Replication {
    locallyRedundant = "LRS",
    zoneRedundant = "ZRS",
    geoRedundant = "GRS",
    readAccessGeoRedundant = "RA-GRS"
}

export enum AccessTier {
    cool = "Cool",
    hot = "Hot"
}

export interface AccountProperties extends azure.ResourceProperties {
    kind?: AccountKind;
    performance?: Performance;
    replication?: Replication;
    requireHttps?: boolean;
}

export interface AccountSpec extends AccountProperties, azure.ResourceSpec<Account, AccountSpec, AccountProperties> { }

export interface AccountEndpoints {
    blob: URL;
    file: URL;
    queue: URL;
    web: URL;
}

export interface AccountKeys {
    key1: string;
    key2: string;
}

export interface Account extends azure.Resource<Account, AccountSpec, AccountProperties> {
    readonly endpoints: AccountEndpoints;
    readonly keys: AccountKeys;
    createBlobClient(): sdk.BlobService;
    createFileClient(): sdk.FileService;
    createQueueClient(): sdk.QueueService;
    createTableClient(): sdk.TableService;
}

export declare let account: azure.ResourceType<Account, AccountSpec, AccountProperties>;